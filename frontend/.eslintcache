[{"D:\\Training\\REACT\\Emp\\frontend\\src\\reportWebVitals.js":"1","D:\\Training\\REACT\\Emp\\frontend\\src\\App.js":"2","D:\\Training\\REACT\\Emp\\frontend\\src\\index.js":"3","D:\\Training\\REACT\\Emp\\frontend\\src\\module\\list.js":"4","D:\\Training\\REACT\\Emp\\frontend\\src\\module\\form.js":"5","D:\\Training\\REACT\\Emp\\frontend\\src\\module\\edit.js":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1484,"mtime":1606813139811,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2127,"mtime":1606813487148,"results":"11","hashOfConfig":"8"},{"size":5108,"mtime":1606805913319,"results":"12","hashOfConfig":"8"},{"size":3801,"mtime":1606803381786,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q9lkzs",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"D:\\Training\\REACT\\Emp\\frontend\\src\\reportWebVitals.js",[],"D:\\Training\\REACT\\Emp\\frontend\\src\\App.js",[],"D:\\Training\\REACT\\Emp\\frontend\\src\\index.js",[],"D:\\Training\\REACT\\Emp\\frontend\\src\\module\\list.js",[],"D:\\Training\\REACT\\Emp\\frontend\\src\\module\\form.js",[],"D:\\Training\\REACT\\Emp\\frontend\\src\\module\\edit.js",["27"],"import React from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport axios from 'axios';\r\nconst baseUrl = \"http://localhost:5000\"\r\n\r\nclass EditComponent extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        dataEmployee:{},\r\n        FName: \"\",\r\n        LName: \"\",\r\n        Address:\"\",\r\n        Org:\"\",\r\n        Salary:\"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.ID;\r\n    //http://localhost:5000/user/17\r\n    const url = \"http://localhost:5000/user/\"+userId\r\n    axios.get(url)\r\n    .then(res=>{\r\n      if (res.data.success) {\r\n        const data = res.data.data[0]\r\n        this.setState({\r\n          dataEmployee:data,\r\n          Id : data.ID,\r\n          FName: data.FIRSTNAME,\r\n          LName:data.LASTNAME,\r\n          Address:data.ADDRESS,\r\n          Org:data.ORGNAME,\r\n          Salary:data.SALARY\r\n        })\r\n      }\r\n      else {\r\n        alert(\"Error web service\")\r\n      }\r\n    })\r\n    .catch(error=>{\r\n      alert(\"Error server \"+error)\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div>\r\n            <div class=\"form-row justify-content-center\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"firstname\">FIRSTNAME </label>\r\n                    <input type=\"text\" class=\"form-control\"  placeholder=\"Enter your FirstName\" \r\n                    value={this.state.FName} onChange={(value)=> this.setState({FName:value.target.value})}/>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"lastname\">LASTNAME</label>\r\n                    <input type=\"text\" class=\"form-control\"  placeholder=\"Enter your LastName\" \r\n                    value={this.state.LName} onChange={(value)=> this.setState({LName:value.target.value})}/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"address\">ADDRESS</label>\r\n                    <input type=\"address\" class=\"form-control\"  placeholder=\"Enter your Address\" \r\n                    value={this.state.Address} onChange={(value)=> this.setState({Address:value.target.value})}/>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"orgname\">ORGNAME</label>\r\n                    <input type=\"text\" class=\"form-control\"  placeholder=\"Organisation name\" \r\n                    value={this.state.Org} onChange={(value)=> this.setState({Org:value.target.value})}/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"salary\">SALARY</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"salary\" placeholder=\"salary in Rs.\" \r\n                value={this.state.Salary} onChange={(value)=> this.setState({Salary:value.target.value})}/>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" onClick={()=>this.Update()}>Update</button>\r\n        </div>\r\n        );\r\n  }\r\n\r\n  Update(){\r\n    let userID = this.props.match.params.ID;\r\n\r\n    const baseUrl = \"http://localhost:5000/updateuser\"\r\n    const datapost = {\r\n        \"ID\" : userID,  \r\n        \"FIRSTNAME\" : this.state.FName,\r\n        \"LASTNAME\" : this.state.LName,\r\n        \"ADDRESS\" : this.state.Address,\r\n        \"ORGNAME\": this.state.Org,\r\n        \"SALARY\" : this.state.Salary,\r\n    }\r\n\r\n    axios.put(baseUrl,datapost)\r\n    .then(response => {\r\n      if (response.data.success) {\r\n        alert(\"updated successfully!!\")\r\n      }\r\n      else {\r\n        alert(\"Error\")\r\n      }\r\n    })\r\n    .catch ( error => {\r\n      alert(\"Error 325 \")\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default EditComponent;",{"ruleId":"28","severity":1,"message":"29","line":6,"column":7,"nodeType":"30","messageId":"31","endLine":6,"endColumn":14},"no-unused-vars","'baseUrl' is assigned a value but never used.","Identifier","unusedVar"]